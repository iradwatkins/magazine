version: '3.9'

services:
  # ============================================================================
  # Magazine Next.js Application
  # ============================================================================
  magazine-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: magazine-app
    ports:
      - '3007:3007'
    environment:
      # Isolated database
      DATABASE_URL: postgresql://magazine_user:${POSTGRES_PASSWORD}@magazine-postgres:5432/magazine_db

      # Isolated cache
      REDIS_URL: redis://magazine-redis:6379/0

      # Isolated MinIO
      MINIO_ENDPOINT: http://magazine-minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET: stepperslife-magazine
      MINIO_PUBLIC_URL: https://media.magazine.stepperslife.com

      # NextAuth
      NEXTAUTH_URL: https://magazine.stepperslife.com
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}

      # OAuth
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}

      # Main Site Integration
      MAIN_SITE_WEBHOOK_URL: ${MAIN_SITE_WEBHOOK_URL}
      WEBHOOK_SECRET: ${WEBHOOK_SECRET}

      # Email
      RESEND_API_KEY: ${RESEND_API_KEY}

      # App Config
      NEXT_PUBLIC_APP_URL: https://magazine.stepperslife.com
      NODE_ENV: production
      PORT: 3007

    depends_on:
      magazine-postgres:
        condition: service_healthy
      magazine-redis:
        condition: service_healthy
      magazine-minio:
        condition: service_healthy

    restart: unless-stopped

    networks:
      - magazine-isolated-network

  # ============================================================================
  # Dedicated PostgreSQL (ISOLATED - Magazine Only)
  # ============================================================================
  magazine-postgres:
    image: postgres:16-alpine
    container_name: magazine-postgres
    environment:
      POSTGRES_USER: magazine_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: magazine_db

    ports:
      - '5407:5432' # Unique port mapping (NOT 5432 to avoid conflicts)

    volumes:
      - magazine-postgres-data:/var/lib/postgresql/data
      - ./backups/postgres:/backups

    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U magazine_user']
      interval: 10s
      timeout: 5s
      retries: 5

    restart: unless-stopped

    networks:
      - magazine-isolated-network

  # ============================================================================
  # Dedicated Redis (ISOLATED - Magazine Only)
  # ============================================================================
  magazine-redis:
    image: redis:7-alpine
    container_name: magazine-redis

    ports:
      - '6407:6379' # Unique port mapping

    volumes:
      - magazine-redis-data:/data

    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5

    restart: unless-stopped

    networks:
      - magazine-isolated-network

  # ============================================================================
  # Dedicated MinIO (ISOLATED - Magazine Only)
  # ============================================================================
  magazine-minio:
    image: minio/minio:latest
    container_name: magazine-minio

    ports:
      - '9007:9000' # Unique S3 API port
      - '9107:9001' # Unique Web Console port

    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}

    volumes:
      - magazine-minio-data:/data

    command: server /data --console-address ":9001"

    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3

    restart: unless-stopped

    networks:
      - magazine-isolated-network

  # ============================================================================
  # MinIO Bucket Initialization (One-time setup)
  # ============================================================================
  magazine-minio-init:
    image: minio/mc:latest
    container_name: magazine-minio-init

    depends_on:
      magazine-minio:
        condition: service_healthy

    entrypoint: >
      /bin/sh -c "
      mc alias set magazineminio http://magazine-minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY};
      mc mb magazineminio/magazine-media --ignore-existing;
      mc anonymous set public magazineminio/magazine-media;
      exit 0;
      "

    networks:
      - magazine-isolated-network

# ============================================================================
# Volumes (Isolated to Magazine)
# ============================================================================
volumes:
  magazine-postgres-data:
    driver: local
  magazine-redis-data:
    driver: local
  magazine-minio-data:
    driver: local

# ============================================================================
# Network (Isolated to Magazine)
# ============================================================================
networks:
  magazine-isolated-network:
    driver: bridge
